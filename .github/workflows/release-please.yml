name: Release Please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Log into Digital Ocean Container Registry
        run: doctl registry login

      - uses: actions/checkout@v2

      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: node
          package-name: stash-bot
          path: bot

      - name: Start Deployment
        uses: bobheadxi/deployments@v0.6.2
        id: deployment
        if: ${{ always() && steps.release.outputs.release_created }}
        with:
          step: start
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          env: production

      - name: Build Docker Image
        if: ${{ steps.release.outputs.release_created }}
        run: docker build ./bot -t stash-bot

      - name: Tag Docker Image
        if: ${{ steps.release.outputs.release_created }}
        run: docker tag stash-bot registry.digitalocean.com/stash-bot/bot

      - name: Publish Docker Image to Container Registry
        if: ${{ steps.release.outputs.release_created }}
        run: docker push registry.digitalocean.com/stash-bot/bot

      - name: SSH into Droplet and Run Bot
        if: ${{ steps.release.outputs.release_created }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
          script: docker stop bot && docker rm bot && docker pull registry.digitalocean.com/stash-bot/bot:latest && docker run -e TOKEN=${{ secrets.DISCORD_TOKEN }} -d --name bot registry.digitalocean.com/stash-bot/bot

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.6.2
        if: ${{ always() && steps.release.outputs.release_created }}
        with:
          step: finish
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
